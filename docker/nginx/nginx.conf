user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;

    keepalive_timeout 65;

    gzip on;

    server {
        listen 443 ssl;

        server_name journeyplanner.io;

        ssl_certificate /etc/nginx/certs/journeyplanner.io.pem;
        ssl_certificate_key /etc/nginx/certs/journeyplanner.io.key;
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/certs/authenticated_origin_pull_ca.pem;

        if ($http_host ~ "\.$" ){
            rewrite ^(.*) $scheme://$host$1 permanent;
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /i18n/ {
            proxy_pass http://i18n:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        location /.well-known/ {
            root /usr/share/nginx/html/;
        }
    }

    server {
        listen 443 ssl;

        server_name api.journeyplanner.io;

        ssl_certificate /etc/nginx/certs/journeyplanner.io.pem;
        ssl_certificate_key /etc/nginx/certs/journeyplanner.io.key;
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/certs/authenticated_origin_pull_ca.pem;

        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # prohibit access to the /api/upload endpoint from the outside
        location /api/upload {
            return 403;
        }

        location /upload/files {
            proxy_pass http://tusd:8080/files;

            # Disable request and response buffering
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_http_version 1.1;

            # Add X-Forwarded-* headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            client_max_body_size 0;
        }
    }

    server {
        listen 443 ssl;

        server_name upload.journeyplanner.io;

        ssl_certificate /etc/letsencrypt/live/journeyplanner.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/journeyplanner.io/privkey.pem;

        location /files {
            proxy_pass http://tusd:8080/files;

            # Disable request and response buffering
            proxy_request_buffering off;
            proxy_buffering off;
            proxy_http_version 1.1;

            # Add X-Forwarded-* headers
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            client_max_body_size 0;
        }
    }

    server {
        listen 443 ssl;
        server_name www.journeyplanner.io;

        ssl_certificate /etc/nginx/certs/journeyplanner.io.pem;
        ssl_certificate_key /etc/nginx/certs/journeyplanner.io.key;
        ssl_verify_client on;
        ssl_client_certificate /etc/nginx/certs/authenticated_origin_pull_ca.pem;

        return 301 https://journeyplanner.io$request_uri;
    }
}
